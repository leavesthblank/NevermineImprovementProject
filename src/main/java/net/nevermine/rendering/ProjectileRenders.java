package net.nevermine.rendering;

import cpw.mods.fml.client.registry.RenderingRegistry;
import net.nevermine.projectiles.auxillary.EntityElementalArrow;
import net.nevermine.projectiles.auxillary.EntityGreatblade;
import net.nevermine.projectiles.auxillary.EntityScythe;
import net.nevermine.projectiles.cannon.*;
import net.nevermine.projectiles.enemy.*;
import net.nevermine.projectiles.energy.*;
import net.nevermine.projectiles.gun.*;
import net.nevermine.projectiles.gun.EntitySwarmShot;
import net.nevermine.projectiles.render.*;
import net.nevermine.projectiles.staff.*;
import net.nevermine.projectiles.sticky.*;
import net.nevermine.projectiles.throwable.*;

public class ProjectileRenders {
	public static void init() {
		RenderingRegistry.registerEntityRenderingHandler(EntityDischargeShot.class, new RenderDischargeShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityMetalPellet.class, new RenderMetalPellet());
		RenderingRegistry.registerEntityRenderingHandler(EntityBonePellet.class, new RenderBonePellet());
		RenderingRegistry.registerEntityRenderingHandler(EntityMetalSlug.class, new RenderMetalSlug());
		RenderingRegistry.registerEntityRenderingHandler(EntityNetherSlug.class, new RenderNetherSlug());
		RenderingRegistry.registerEntityRenderingHandler(EntitySeedDart.class, new RenderSeedDart());
		RenderingRegistry.registerEntityRenderingHandler(EntityShoeShot.class, new RenderShoeShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityWartDart.class, new RenderWartDart());
		RenderingRegistry.registerEntityRenderingHandler(EntityFireBullet.class, new RenderFireBullet());
		RenderingRegistry.registerEntityRenderingHandler(EntityIllusionShot.class, new RenderIllusionShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityFishShot.class, new RenderFishShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityStreamShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityColorShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityCannonBall.class, new RenderCannonBall());
		RenderingRegistry.registerEntityRenderingHandler(EntityCannonShot.class, new RenderCannonShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityGrenadeShot.class, new RenderGrenadeShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityShadowBall.class, new RenderShadowBall());
		RenderingRegistry.registerEntityRenderingHandler(EntityWitherBall.class, new RenderWitherBall());
		RenderingRegistry.registerEntityRenderingHandler(EntityWrathShot.class, new RenderWrathShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityRockFragment.class, new RenderRockFragment());
		RenderingRegistry.registerEntityRenderingHandler(EntityMindShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityElementalArrow.class, new RenderElementalArrow());
		RenderingRegistry.registerEntityRenderingHandler(EntityMagicBall.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntitySkelemanShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityGuardianProjectileGreen.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityVolarShot.class, new RenderVolarShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityVoliantShot.class, new RenderVolarShot());
		RenderingRegistry.registerEntityRenderingHandler(EntitySurveyorShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityBamShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityNethengeicWitherShot.class, new RenderNethengeicWitherShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityShadowlordShot.class, new RenderShadowlordShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityMoonShineShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityBloodDrainShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityHellFireProjectile.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityDoomShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityPowerRayShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityToxicShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityIceBlastShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityMagicBallSeaTroll.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityMagicBallWither.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityRPGShot.class, new RenderGrenadeShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityGuardianProjectileYellow.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityGuardianProjectileBlue.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityGuardianProjectileRed.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityAncientDischarger.class, new RenderDischargeShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityBoomCannonGrenade.class, new RenderGrenadeShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityEradicatorShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityIominatorShot.class, new RenderMetalPellet());
		RenderingRegistry.registerEntityRenderingHandler(EntityMetalPelletFire.class, new RenderMetalPellet());
		RenderingRegistry.registerEntityRenderingHandler(EntityTigerShot.class, new RenderMetalPellet());
		RenderingRegistry.registerEntityRenderingHandler(EntitySpineShot.class, new RenderMetalPellet());
		RenderingRegistry.registerEntityRenderingHandler(EntityPrecasianSlug.class, new RenderNetherSlug());
		RenderingRegistry.registerEntityRenderingHandler(EntitySoundCannon1.class, new RenderSoundCannon1());
		RenderingRegistry.registerEntityRenderingHandler(EntitySoundCannon2.class, new RenderSoundCannon2());
		RenderingRegistry.registerEntityRenderingHandler(EntitySoundCannon3.class, new RenderSoundCannon3());
		RenderingRegistry.registerEntityRenderingHandler(EntitySoundCannon4.class, new RenderSoundCannon4());
		RenderingRegistry.registerEntityRenderingHandler(EntitySoundCannon5.class, new RenderSoundCannon5());
		RenderingRegistry.registerEntityRenderingHandler(EntitySoulSparkShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityShowerShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityConfetti.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityGolemGunBullet.class, new RenderMetalPellet());
		RenderingRegistry.registerEntityRenderingHandler(EntitySurgeRed.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntitySurgeBlue.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityFungiShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityRunicBomb.class, new RenderRunicBomb());
		RenderingRegistry.registerEntityRenderingHandler(EntityReaperShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityClownShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityNightmareFall.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityTangleFall.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityMetalFungShot.class, new RenderMetalPellet());
		RenderingRegistry.registerEntityRenderingHandler(EntityValkyrieShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityDestructorShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityRockFragmentFungal.class, new RenderRockFragment());
		RenderingRegistry.registerEntityRenderingHandler(EntityFlowerBall.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityGhoulBall.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityToxicBall.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityFungalBall.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityHiveBall.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityAquaBall.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityIroBall.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityFloroRPG.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityEnergyShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntitySpecialMetalPellet.class, new RenderMetalPellet());
		RenderingRegistry.registerEntityRenderingHandler(EntityPenetrationBullet.class, new RenderMetalPellet());
		RenderingRegistry.registerEntityRenderingHandler(EntityFloroMetalPellet.class, new RenderMetalPellet());
		RenderingRegistry.registerEntityRenderingHandler(EntityFlowerShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityIonShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityDeathRayShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityLunaShot.class, new RenderLunaShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityPoisonPlungerShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityReefShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityDestroyerShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityIroMineShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityAtomizerBounce.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityAtomizerShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityBubbleShot.class, new RenderBubbleShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityHellBubbleShot.class, new RenderHellBubbleShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityCelestialFall.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityDestructionBall.class, new RenderBigBomb());
		RenderingRegistry.registerEntityRenderingHandler(EntityFireFall.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityHauntersShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityLunarFall.class, new RenderSpaceFall());
		RenderingRegistry.registerEntityRenderingHandler(EntityLyonicShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityMeteorFall.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityMoonlightFall.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityPolymorphShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityPrimordialShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityRosidianShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityStaffAquatic.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityStaffBaron.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityStaffFire.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityStaffGhoul.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityStaffMecha.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityStaffPoison.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityStaffWind.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityStaffWater.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityStaffWither.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntitySunEmitter.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntitySunShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityUnderworldBarrage.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityWitherPierce.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityPopShot.class, new RenderPopShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityGreatblade.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityPolytomShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntitySpectralShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityRunicGuardianShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityClunkheadShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityMiskelShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityMoonFall.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityFireBall.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityCarrotBall.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityScythe.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityDischargeDamage.class, new RenderDischargeShot());
		RenderingRegistry.registerEntityRenderingHandler(EntitySwarmShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityVortex.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityStaffPower.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityMoonDestroyer.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityMoonCannonShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityMoonMaker.class, new RenderMetalPellet());
		RenderingRegistry.registerEntityRenderingHandler(EntityPredatorianShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntitySkeletalPellet.class, new RenderMetalPellet());
		RenderingRegistry.registerEntityRenderingHandler(EntityLightSlug.class, new RenderMetalSlug());
		RenderingRegistry.registerEntityRenderingHandler(EntityLightBlaster.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityLightSpark.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityGoldBringer.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityGoldenBullet.class, new RenderMetalPellet());
		RenderingRegistry.registerEntityRenderingHandler(EntityGoldenCannonball.class, new RenderCannonBall());
		RenderingRegistry.registerEntityRenderingHandler(EntityGrawShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityPenumbraShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityAnemiaShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityLelyetianShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityBloodball.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityHagShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityLuxonStickler.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityLuxonShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityErebonStickler.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityErebonShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntitySelyanStickler.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntitySelyanShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityPlutonStickler.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityPlutonShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityStickyBomb.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityBlastBomb.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityProton.class, new RenderProtonShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityLaser.class, new RenderLaserShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityMagickeShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityGyroShot.class, new RenderMetalPellet());
		RenderingRegistry.registerEntityRenderingHandler(EntityClownBall.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityBozoBall.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityPopperShot.class, new RenderPopperShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityBalloonBomb.class, new RenderBalloonBomb());
		RenderingRegistry.registerEntityRenderingHandler(EntityWinder.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntitySmileBlaster.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityYellowBullet.class, new RenderMetalPellet());
		RenderingRegistry.registerEntityRenderingHandler(EntityBlissfulBlast.class, new RenderBlissfulBlast());
		RenderingRegistry.registerEntityRenderingHandler(EntityConstructShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityConstructTerrorShot.class, new RenderConstructTerrorShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityShell.class, new RenderMetalPellet());
		RenderingRegistry.registerEntityRenderingHandler(EntityOrbocronShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityChakram.class, new RenderChakram());
		RenderingRegistry.registerEntityRenderingHandler(EntityGooBall.class, new RenderGooBall());
		RenderingRegistry.registerEntityRenderingHandler(EntityVulkram.class, new RenderVulkram());
		RenderingRegistry.registerEntityRenderingHandler(EntitySliceStar.class, new RenderSliceStar());
		RenderingRegistry.registerEntityRenderingHandler(EntityHellFire.class, new RenderHellfire());
		RenderingRegistry.registerEntityRenderingHandler(EntityFrostStream.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityCherryShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityAirheadShot.class, new RenderVolarShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityCandorShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntitySeaocronShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntitySkulloShot.class, new RenderSkulloShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityWaterBalloonBomb.class, new RenderBalloonBomb());
		RenderingRegistry.registerEntityRenderingHandler(EntityFragmentShot.class, new RenderFragmentShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityLelyetianBall.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityCreeperShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityCreepBomb.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityCreepTube.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityDischargeShell.class, new RenderDischargeShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityOdiousBeam.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityBeamer.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityRevolution.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityBoomBall.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityReturningGrenade.class, new RenderGrenadeShot());
		RenderingRegistry.registerEntityRenderingHandler(EntityModuloShot.class, new RenderLaserShot());

		RenderingRegistry.registerEntityRenderingHandler(EntityCraexxeusBomb.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityCraexxeusShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityCraexxeusNuke.class, new RenderInvisProjectile());

		RenderingRegistry.registerEntityRenderingHandler(EntityParalyzerShot.class, new RenderInvisProjectile());
		RenderingRegistry.registerEntityRenderingHandler(EntityShyreShot.class, new RenderInvisProjectile());

		RenderingRegistry.registerEntityRenderingHandler(EntityBaronessShot.class, new RenderInvisProjectile());
	}
}
